spack:
  config:
    concretizer: clingo
  packages:
    all:
      compiler: [gcc@7.5.0]
      providers:
        mpi: [openmpi@4.0.6]
        blas: [openblas]
        lapack: [openblas]
        scalapack: [openblas]
    gcc:
      version: [7.5.0]
    cmake:
      version: [3.18.4]
    ncurses:
      version: [6.2]
    #openssl:
    # version:
    #   - 1.0.2k-fips # system version breaks rust
    #   - 1.1.1k
    python:
      version: [3.8.11]
    cairo:
      variants: +X+fc+ft+gobject+pdf+png~svg
    py-setuptools-scm:
      variants: +toml
    slurm:
      buildable: false
      externals:
      - spec: slurm@20.02.5 sysconfdir=/cm/shared/apps/slurm/var/etc/slurm +pmix+hwloc
        prefix: /cm/shared/apps/slurm/current
    intel-mpi:
      buildable: false
      externals:
      - spec: intel-mpi@2017.4.196
        prefix: /cm/shared/sw/pkg/vendor/intel-pstudio/2017-4/compilers_and_libraries_2017.4.196/linux/mpi
    openmpi:
      version: [4.0.6]
      variants: fabrics=ofi,ucx,psm,psm2,verbs schedulers=slurm +pmi~static+thread_multiple+legacylaunchers
    ucx:
      variants: +thread_multiple+cma+rc+dc+ud+mlx5-dv+ib-hw-tm
    libfabric:
      variants: fabrics=udp,rxd,shm,sockets,tcp,rxm,verbs,psm2,psm,mlx
    mathematica:
      buildable: false
      externals:
      - spec: mathematica@11.2
        prefix: /cm/shared/sw/pkg/vendor/mathematica/11.2
      - spec: mathematica@11.3
        prefix: /cm/shared/sw/pkg/vendor/mathematica/11.3
      - spec: mathematica@12.1
        prefix: /cm/shared/sw/pkg/vendor/mathematica/12.1
      - spec: mathematica@12.2
        prefix: /cm/shared/sw/pkg/vendor/mathematica/12.2
    matlab:
      buildable: false
      externals:
      - spec: matlab@R2018a
        prefix: /cm/shared/sw/pkg/vendor/matlab/R2018a
      - spec: matlab@R2018b
        prefix: /cm/shared/sw/pkg/vendor/matlab/R2018b
      - spec: matlab@R2020a
        prefix: /cm/shared/sw/pkg/vendor/matlab/R2020a
    llvm:
      version: [11.0.1]
      # this doesn't really work:
      compiler: [gcc@7.5.0]
      variants: +omp_tsan+python
    openblas:
      version: [0.3.15]
      variants: threads=pthreads
    hdf5:
      version: [1.10.7]
      variants: +hl+fortran+cxx~mpi
    fftw:
      version: [3.3.9]
      variants: ~mpi precision=float,double,quad,long_double
    py-torch:
      variants: cuda_arch=35,60,70,80
    nccl:
      variants: cuda_arch=35,60,70,80
    magma:
      variants: cuda_arch=35,60,70,80
    py-pybind11:
      version: [2.6.2]
    # these don't really work either:
    intel-mkl:
      compiler: [gcc@7.5.0]
    intel-oneapi-mkl:
      compiler: [gcc@7.5.0]
    intel-oneapi-mpi:
      compiler: [gcc@7.5.0]
    qt:
      variants: +dbus+opengl
    harfbuzz:
      variants: +graphite2

  definitions:
  - compiler:
    - gcc@7.5.0
  - other_compilers:
    - gcc@10.2.0
    #- 'intel'
  - compilers:
    - $compiler
    - $other_compilers
  - mpis:
    - intel-oneapi-mpi
    - intel-mpi@2017.4.196
    # without the explicit fabrics ucx is lost in dependencies
    - openmpi@1.10.7 fabrics=ofi,psm,psm2,verbs schedulers=slurm +pmi~static+thread_multiple+legacylaunchers
    # openmpi 2 on ib reports: "unknown link width 0x10" and is a bit slow
    - openmpi@2.1.6 fabrics=ofi,psm,psm2,verbs schedulers=slurm +pmi~static+thread_multiple+legacylaunchers
    - openmpi@4.0.6 fabrics=ofi,ucx,psm,psm2,verbs schedulers=slurm +pmi~static+thread_multiple+legacylaunchers
  - pythons:
    # this doesn't work yet
    - python@3.8.11
    #- python@3.9.6
    #- python@2.7.18

  specs:
  # Externals
  - slurm
  - mathematica@11.2
  - mathematica@11.3
  - mathematica@12.1
  - mathematica@12.2
  - matlab@R2018a
  - matlab@R2018b
  - matlab@R2020a

  # Compliers
  - $compilers
  - llvm@10.0.1
  - llvm@11.0.1
  - llvm@12.0.0

  # Utilities
  - cmake
  - curl
  - distcc
  - emacs +X toolkit=athena
  - fio
  - gdal
  - gdb # needs python+debug
  - ghostscript
  - git
  - git-lfs
  - go
  - gperftools
  - gromacs ~mpi
  - hdfview
  #- i3 #needs some xcb things
  - imagemagick
  - julia
  - keepassxc
  - lftp
  - mercurial
  - node-js
  - node-js@:12
  - octave ^openblas
  - openjdk
  #- pdftk #needs gcc java (gcj)
  - perl
  - petsc ~mpi
  - postgresql
  - r +X
  - rclone
  - rust
  - singularity
  - smartmontools
  - subversion
  - swig
  - texlive
  - texstudio
  - tmux
  - udunits
  - unison
  - valgrind ~mpi
  - vim   features=huge +x+python+gui+cscope+lua+ruby
  - vtk ~mpi
  - zsh

  - intel-mkl
  - intel-oneapi-mkl
  - intel-oneapi-mpi
  - intel-mpi
  - nvhpc +mpi

  # Core libraries
  - matrix:
    - - $%compilers
    - - boost
      - cuda
      - cudnn
      - eigen
      - fftw@:2 precision=float,double
      - fftw
      - gsl+external-cblas ^openblas threads=none
      - gsl+external-cblas ^intel-oneapi-mkl
      - hdf5@:1.8
      - hdf5
      - nfft
      - openblas threads=none
      - openblas threads=openmp
      - openblas threads=pthreads
      - $mpis
      - openmpi-opa ^openmpi@4.0.6 fabrics=ofi,ucx,psm,psm2,verbs schedulers=slurm +pmi~static+thread_multiple+legacylaunchers
      - $pythons # python default to multithreaded openblas
  - boost%clang+clanglibcpp ^bzip2%gcc ^zlib%gcc

  # python packages that don't depend on blas at all
  - matrix:
    - - $%compilers
    - - $^pythons
    - - python-blas-backend ^openblas # python-blas-backend is a custom package that includes scipy/numpy
      - python-blas-backend ^intel-oneapi-mkl
      - py-cherrypy
      - py-flask
      - py-pip
      - py-ipython
      - py-pyyaml
      - py-pylint
      - py-autopep8
      - py-sqlalchemy
      - py-nose
      - py-mako
      - py-pkgconfig
      - py-virtualenv
      - py-sympy
      - py-pycairo
      - py-sphinx
      - py-pytest
      - py-hypothesis
      - py-cython
      - py-h5py@:2 ~mpi ^openblas
      - py-torch ^openblas ^openmpi
      - py-torch ^intel-oneapi-mkl ^openmpi
      - py-jupyterlab

  - matrix:
    - - $^pythons
    - - py-pyqt5
      - py-jupyter

  # blas stuff requires a blas spec
  - matrix:
    - - $%compilers
    - - $^pythons
    - - py-pandas     # python packages that implicitly depend on blas
      - py-scikit-learn
      - py-emcee
      - py-astropy
      - py-dask
      - py-seaborn
      - py-matplotlib
      - py-numba
    - - ^openblas

  # Anything dependent on MPI
  - matrix:
    - - $%compiler
    - - $^mpis
    - - gromacs +mpi
      - ior
      - petsc +mpi
      - valgrind +mpi
  - matrix:
    - - $%compilers
    - - $^mpis
    - - boost+mpi
      - fftw@:2
      - fftw
      - hdf5@:1.8+mpi+fortran
      - hdf5+mpi+fortran
      - osu-micro-benchmarks
  - matrix:
    - - $%compilers
    - - $^mpis
    - - $^pythons
    - - py-mpi4py
      - py-h5py@:2 ^openblas ^hdf5+mpi+fortran

  # local stuff
  - py-disbatch@1.4
  - py-disbatch@2.0-rc1

  view:
    python:
      root: '$root/view/python'
      projections:
        all: '{^python.version}/{compiler.name}-{compiler.version}'
      select:
      - python~debug
      - ^python~debug
      exclude:
      - ^intel-oneapi-mkl
      - ^intel-mkl
      - ^cuda
      - ^mpi
      - python-blas-backend
      - py-disbatch

      # manually exclude other python dependencies (messy... see also module whitelist below)
      - at-spi2-core
      - atk
      - ^atk
      - boost
      - cairo
      - cmake
      - dbus
      - gdb
      - gdk-pixbuf
      - getttext
      - glew
      - glib
      - gobject-introspection
      - harfbuzz
      - keepassxc
      - llvm
      - libcroco
      - ^libcroco
      - libepoxy
      - ^libepoxy
      - mercurial
      - mesa
      - pango
      - poppler
      - qt
      - r
      - shared-mime-info
      - ^shared-mime-info
      - texstudio
      - vim
      - z3

  modules:
    default:
      enable:
      - lmod
      roots:
        lmod: $root/modules
      lmod:
        hierarchy:
        - mpi
        hash_length: 0
        core_compilers:
        - gcc@7.5.0
        - clang@11.0.1
        core_specs:
        - gcc@7.5.0
        - gcc@10.2.0
        blacklist:
        - '%gcc@4.8.5'
        - ^python
        - lmod
        - openmpi
        blacklist_implicits: true
        openmpi-opa:
          environment:
            set:
              OMPI_MCA_pml: cm
        openmpi:
          environment:
            set:
              OPENMPI_VERSION: '{version}'
        whitelist:
        - py-mpi4py
        - py-numpy
        - py-scipy
        - py-torch
        - py-disbatch
        - python-blas-backend^intel-oneapi-mkl
        - openmpi%gcc
        - intel-mpi
        # things that depend on python, so they get blocked without a whitelist (see also projections below):
        - boost
        - cmake
        - gdb
        - gettext
        - ghostscript
        - imagemagick
        - keepassxc
        - llvm
        - mercurial
        - qt
        - texlive
        - texstudio
        - r
        - vim
        - vtk
        all:
          autoload: none
          prerequisites: direct
          environment:
            set:
              '{name}_BASE': '{prefix}'
          suffixes:
            ^mpi: mpi
          filter:
            environment_blacklist: [CC, FC, CXX, F77]
        matlab:
          environment:
            set:
              MLM_LICENSE_FILE: /cm/shared/sw/pkg/vendor/matlab/src/network.lic
        slurm:
          environment:
            set:
              CMD_WLM_CLUSTER_NAME: slurm
              SLURM_CONF: /cm/shared/apps/slurm/var/etc/slurm/slurm.conf
        hdf5:
          environment:
            set:
              HDF5_ROOT: '{prefix}'
        boost:
          environment:
            set:
              BOOST_ROOT: '{prefix}'
        python:
          environment:
            prepend_path:
              PATH: '{spack_install}/view/python/{version}/{compiler.name}-{compiler.version}/bin'
              CPATH: '{spack_install}/view/python/{version}/{compiler.name}-{compiler.version}/include'
              CMAKE_PREFIX_PATH: '{spack_install}/view/python/{version}/{compiler.name}-{compiler.version}'
              PKG_CONFIG_PATH: '{spack_install}/view/python/{version}/{compiler.name}-{compiler.version}/lib/pkgconfig'
              MANPATH: '{spack_install}/view/python/{version}/{compiler.name}-{compiler.version}/share/man'
        python@3.8:3.8:
          environment:
            prepend_path:
              PYTHONPATH: '{spack_install}/view/python/{version}/{compiler.name}-{compiler.version}/lib/python3.8/site-packages'
        python@3.9:3.9:
          environment:
            prepend_path:
              PYTHONPATH: '{spack_install}/view/python/{version}/{compiler.name}-{compiler.version}/lib/python3.9/site-packages'
        python-blas-backend:
          autoload: direct
        py-torch:
          autoload: direct
        projections:
          boost+clanglibcpp: '{name}/{version}-libcpp'
          boost: '{name}/{version}'
          gdb: '{name}/{version}'
          gromacs+plumed: '{name}/{version}-plumed'
          ghostscript: '{name}/{version}'
          gsl^intel-oneapi-mkl: '{name}/{version}-mkl'
          gsl^openblas: '{name}/{version}-openblas'
          imagemagick: '{name}/{version}'
          keepassxc: '{name}/{version}'
          llvm: '{name}/{version}'
          mercurial: '{name}/{version}'
          openblas threads=none: '{name}/{version}-single'
          openblas threads=openmp: '{name}/{version}-openmp'
          openblas threads=pthreads: '{name}/{version}-threaded'
          openmpi-opa: '{name}/{^openmpi.version}'
          py-disbatch: disBatch/{version}
          py-numpy^intel-oneapi-mkl: python-packages/{^python.version}/{name}/.{version}-mkl
          py-numpy^openblas: python-packages/{^python.version}/{name}/.{version}-openblas
          py-scipy^intel-oneapi-mkl: python-packages/{^python.version}/{name}/.{version}-mkl
          py-scipy^openblas: python-packages/{^python.version}/{name}/.{version}-openblas
          py-torch^intel-oneapi-mkl: python-packages/{^python.version}/{name}/{version}-mkl
          py-torch^openblas: python-packages/{^python.version}/{name}/{version}-openblas
          python-blas-backend^intel-oneapi-mkl: python/{^python.version}-mkl
          qt: '{name}/{version}'
          r: '{name}/{version}'
          slurm: slurm/current
          texlive: '{name}/{version}'
          texstudio: '{name}/{version}'
          vim: '{name}/{version}'
          ^python: python-packages/{^python.version}/{name}/{version}
